Running a pythong program

C:\Users\smrut\Desktop\course4\Python3.6.lnk "F:/HigherStudies/python/addnum.py"

tuple not-modifiable hashable so its fast (like append and all wont work)
						tuple	list 	set 	frozenset	dict
Mutable/can be modified	No		Yes		Yes		Yes			Yes
Hashed					yes		No		No		No			Yes
so python compiler looks at variables in local, globla nd addlocal in that order. Note that the interpreter looks for symbols like def, class or = to see
if there is any issues

To find current working directory
import os
os.getcwd() >> to get current working directory
os.chdir(path) >> to change current working directory

F:/HigherStudies/python/Python/


>>> os.chdir('C:/Users/Rph/AppData/Local/Programs
>>>
>>>
>>> os.listdir()
['DLLs', 'Doc', 'emacs', 'include', 'init.el', 'L
WS.txt', 'python.exe', 'python3.dll', 'python35.d
, 'README.txt', 'Scripts', 'show-keys.el', 'tcl',
>>>
>>>
>>> f = open('.emacs','w')
>>> f.write('test')
4
>>> f.readline()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
io.UnsupportedOperation: not readable
>>> f.readline()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
io.UnsupportedOperation: not readable
>>>
>>>
>>>
>>> f.close()
>>>
5)  In c++ there are 1d and 2d arrays, IN python we have lists YOu CAn  define 2d arrays(or lists as per oython) in python using list comprehension
You're technically trying to index an uninitialized array. You have to first initialize the outer list with lists before adding items; Python calls this "list comprehension".

# Creates a list containing 5 lists, each of 8 items, all set to 0
w, h = 8, 5;
Matrix = [[0 for x in range(w)] for y in range(h)] 
You can now add items to the list:
Matrix[0][0] = 1
Matrix[6][0] = 3 # error! range... 
Matrix[0][6] = 3 # valid
